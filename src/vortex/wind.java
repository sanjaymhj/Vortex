/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package vortex;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.ImageIcon;

/**
 *
 * @author Sanjay Maharjan
 */
public class wind extends javax.swing.JFrame {

    /**
     * Creates new form window
     */
    javax.swing.GroupLayout layout;
    public wind() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        setLayout(null);
        Listing usorted_list =new Listing("C:\\");
        //Listing lis=sort_List(unsorted_list);
        putLabel(usorted_list);
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        
        layout = new javax.swing.GroupLayout(getContentPane());
       
		setTitle("Explorer");
                Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                int w= (int) screenSize.getWidth();
                int h = (int) screenSize.getHeight();
		 setSize(h,w);
                 setLocation(0,0);
		setResizable(true);
                setVisible(true);
        

       
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(wind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(wind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(wind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(wind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new wind().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    // End of variables declaration 
    private Listing sort_List(Listing unsorted_list)
    {
        int length=unsorted_list.listOfFiles.length;
        for(int i=0;i<length;i++)
        {
            if(unsorted_list.listOfFiles[i].isFile())
            {
                for(int j=0;j<i+1;j++)
                {
                    if(unsorted_list.listOfFiles[j].isDirectory())
                    {
                        File temp=new File("C://");
                        File[] temp2= temp.listFiles();
                        
                                
                        break;
                    }
                }
            }
        }
        
        return unsorted_list;
    }

    private void putLabel(Listing lis) {
        int length=lis.listOfFiles.length;
        int x,y,height,width;
        x=y=0;
        height=width=100;        
        for (int i = 0; i < length; i++) {
      if (lis.listOfFiles[i].isFile()) {
          
          javax.swing.JLabel jLabel1;
        jLabel1 = new javax.swing.JLabel();
        jLabel1.setText(lis.listOfFiles[i].getName());
        add(jLabel1);
        System.out.println("Putting the file label");
        jLabel1.setBounds(x,y,height,width);
        x+=width;
        if(x>500)
        {
            y+=height;
            x=0;
        }
        pack();
        repaint();
      } else if (lis.listOfFiles[i].isDirectory()) {
          javax.swing.JLabel jLabel1;
        jLabel1 = new javax.swing.JLabel();
        jLabel1.setText(lis.listOfFiles[i].getName());
        add(jLabel1);
        System.out.println("Putting the folder label");
        jLabel1.setBounds(x,y,height,width);
        
        x+=width;
        if(x>500)
        {
            y+=height;
            x=0;
        }pack();
            
        repaint();
        
      }
    }
        
    }
}
